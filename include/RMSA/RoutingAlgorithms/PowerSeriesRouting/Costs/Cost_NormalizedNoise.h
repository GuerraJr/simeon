#ifndef CNORMNOISE_H
#define CNORMNOISE_H

#include "Cost.h"
#include <GeneralClasses/TransmissionBitrate.h>
#include <GeneralClasses/ModulationScheme.h>
#include <map>

namespace ROUT
{
namespace PSR
{

/**
 * @brief The cNormNoise class has, as cost, the noise generated by this noise,
 * normalized by the noise generated by the link with the highest amount of
 * noise generated.
 */
class cNormNoise : public Cost
{
public:
    /**
     * @brief cNormNoise is the standard constructor for the cNormNoise cost.
     * @param NMin is the minimum exponent to the cost.
     * @param NMax is the maximum exponent to the cost.
     * @param T is the topology.
     */
    cNormNoise(int NMin, int NMax, std::shared_ptr<Topology> T);
    arma::rowvec getCost(std::weak_ptr<Link> link, std::shared_ptr<Call> C);

private:
    void createCache();
    std::map <std::shared_ptr<Link>, arma::rowvec> cache;
};

}
}

#endif // CNORMNOISE_H
